from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove

from buttons import greeting_kb, greeting_callback_data
from config import TOKEN
from states import OurStates
from user_class import User

user_mapping = (
    dict()
)  # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–∂–¥—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_mapping: dict[int, User]  # –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è —Ç–∏–ø–∞ –¥–ª—è —Å–ª–æ–≤–∞—Ä—è

bot = Bot(token=TOKEN)  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
dp = Dispatcher(
    bot=bot, storage=MemoryStorage()
)  # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ –ø–∞–º—è—Ç–∏


@dp.message_handler(
    commands=["start"], state="*"  # –∫–æ–º–∞–Ω–¥–∞ /start –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ª—é–±–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
async def start_handler(message: types.Message):
    user_id = message.from_id

    if user_id not in user_mapping:  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ª–æ–≤–∞—Ä–µ
        user_mapping[user_id] = User(
            user_id=user_id
        )  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ User –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä—å

    await message.reply(
        text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤. –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—ë –∏–º—è, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–µ–±–µ –ø–∞—Ä—É!"
    )

    await OurStates.enter_name.set()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è enter_name


# dp.register_message_handler(start_handler, commands="start")


@dp.message_handler(
    state=OurStates.enter_name  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ enter_name
)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def enter_name_handler(message: types.Message):
    user_id = message.from_id
    user = user_mapping[user_id]
    user.name = message.text  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    text = f"–û—Ç–ª–∏—á–Ω–æ, {user.name}! –°–µ–π—á–∞—Å —è –ø–æ–ø—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É."
    await message.answer(text=text)

    await message.answer(text="–¢—ã –≥–æ—Ç–æ–≤? –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!",
                         reply_markup=greeting_kb)
    await OurStates.yes_or_no.set()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è yes_or_no


@dp.callback_query_handler(greeting_callback_data.filter(),
                           state=OurStates.yes_or_no)
# @dp.message_handler(
#     Text(equals="üëã –ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è", ignore_case=True),
#     # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–≤–µ–Ω "–¥–∞" –∏–ª–∏ "yes"
#     state=OurStates.yes_or_no,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ yes_or_no
# )  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ "–¥–∞"
async def wait_for_partner_handler(
    call: types.CallbackQuery,
):
    message = call.message  # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
    user_id = call.from_user.id
    user = user_mapping[user_id]

    await bot.answer_callback_query(call.id)  # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–ª–∞—Å—å(–±—ã–ª–∞ –æ—Ç–∂–∞—Ç–∞)

    await message.reply("–°–µ–π—á–∞—Å –ø–æ–ø—Ä–æ–±—É–µ–º —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–∞...",
                        reply_markup=ReplyKeyboardRemove())
    await OurStates.wait_for_partner.set()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è wait_for_partner

    chosen = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞

    # –ü–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å—Ä–µ–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ª–æ–≤–∞—Ä–µ
    for partner_id, partner_obj in user_mapping.items():
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–≤—è–∑–∞–Ω —Å —Å–∞–º–∏–º —Å–æ–±–æ–π
        # –∏ —á—Ç–æ —É –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –Ω–µ—Ç —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        if (
            partner_id != user.user_id
            and partner_obj.partner_id is None
            and partner_obj.name is not None
        ):
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
            partner_context = dp.get_current().current_state(
                chat=partner_id, user=partner_id
            )
            # –ì–¥–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≥—Ä–∞—Ñ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
            partner_state = await partner_context.get_state()
            # –ï—Å–ª–∏ –æ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–æ–∂–∏–¥–∞–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞", —Ç–æ –≤—ã–±–∏—Ä–∞–µ–º –µ–≥–æ
            if partner_state == OurStates.wait_for_partner.state:
                chosen = partner_id
                break

    if chosen is not None:
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        partner = user_mapping[chosen]

        user.partner_id = chosen
        partner.partner_id = user.user_id

        await message.answer(
            text=f"–¢—ã —Å–µ–π—á–∞—Å —Å–≤—è–∑–∞–Ω —Å {user_mapping[chosen].name}! –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å."
        )
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—É
        await dp.bot.send_message(
            chat_id=chosen, text=f"–¢—ã —Å–µ–π—á–∞—Å —Å–≤—è–∑–∞–Ω —Å {user.name}! –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å."
        )

        await OurStates.messaging.set()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è messaging

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è messaging –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
        # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (—Ç–æ, —á—Ç–æ –æ–±—ã—á–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ state)
        partner_state = dp.get_current().current_state(chat=chosen, user=chosen)
        await partner_state.set_state(
            OurStates.messaging
        )  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è messaging –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
    else:
        await message.answer(
            text="–ü–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç, –∫—Ç–æ –±—ã–ª –±—ã —Å–≤–æ–±–æ–¥–µ–Ω. –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ."
        )


@dp.message_handler(
    state=OurStates.messaging  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ messaging
)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
async def messaging_handler(message: types.Message):
    user = user_mapping[message.from_id]  # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    partner_id = user.partner_id  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
    text = f"{user.name}: {message.text}"  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await dp.bot.send_message(
        chat_id=partner_id, text=text
    )  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—É


@dp.message_handler(
    content_types=types.ContentType.PHOTO,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
    state=OurStates.messaging,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ messaging
)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–º–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
async def messaging_photo_handler(message: types.Message):
    user = user_mapping[message.from_id]
    partner_id = user.partner_id

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    photo = message.photo[-1]

    new_caption = f"{user.name}: {message.caption}"  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await dp.bot.send_photo(
        chat_id=partner_id, photo=photo.file_id, caption=new_caption
    )  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É


@dp.message_handler(
    content_types=types.ContentType.VIDEO,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏–¥–µ–æ
    state=OurStates.messaging,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ messaging
)
async def messaging_video_handler(message: types.Message):
    user = user_mapping[message.from_id]
    partner_id = user.partner_id

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤–∏–¥–µ–æ
    video = message.video

    new_caption = f"{user.name}: {message.caption}"  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await dp.bot.send_video(
        chat_id=partner_id, video=video.file_id, caption=new_caption
    )  # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –ø–∞—Ä—Ç–Ω–µ—Ä—É


@dp.message_handler(
    content_types=types.ContentType.STICKER,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∏–∫–µ—Ä–æ–º
    state=OurStates.messaging,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ messaging
)
async def messaging_sticker_handler(message: types.Message):
    user = user_mapping[message.from_id]
    partner_id = user.partner_id

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å—Ç–∏–∫–µ—Ä–∞
    sticker = message.sticker

    new_caption = f"{user.name}:"  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ —Å –∏–º–µ–Ω–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    await dp.bot.send_message(
        chat_id=partner_id, text=new_caption
    )  # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É
    await dp.bot.send_sticker(
        chat_id=partner_id, sticker=sticker.file_id
    )  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—É —Å –ø–æ–¥–ø–∏—Å—å—é


@dp.message_handler(
    content_types=types.ContentType.AUDIO,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –∞—É–¥–∏–æ
    state=OurStates.messaging,  # –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ messaging
)
async def messaging_audio_handler(message: types.Message):
    user = user_mapping[message.from_id]
    partner_id = user.partner_id

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∞—É–¥–∏–æ
    audio = message.audio

    new_caption = f"{user.name}: {message.caption}"  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await dp.bot.send_audio(
        chat_id=partner_id, audio=audio.file_id, caption=new_caption
    )  # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ –ø–∞—Ä—Ç–Ω–µ—Ä—É


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dispatcher=dp, skip_updates=True)
